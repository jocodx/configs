# Colours
set -g default-terminal "tmux-256color"

setw -g alternate-screen on
setw -g aggressive-resize on

# Set Crtl-Space as prefix
unbind C-Space
set -g prefix C-Space
bind C-Space send-prefix

# Command prompt shortcut
bind-key -n M-§ command-prompt

# Running tmux inside tmux?
# Command Sequence for Nested Tmux Sessions
# bind-key a send-prefix

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 150

# Scroll History
set -g history-limit 30000

# Turn on mouse support
setw -g mouse on

# List keys
bind-key ? list-keys

# Clock
setw -g clock-mode-style 24

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Vi mode
set -g mode-keys vi
# Esc to go in to copy-mode and cancel it
bind Escape copy-mode
bind-key -T copy-mode-vi 'Escape' send -X cancel
# paste with p
unbind p
bind p paste-buffer
# yank with y
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Copy and paste to and fro with X clipboard with xclip
bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null" \; display-message "Paste buffer copied to X clipboard."
bind-key C-v run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# Choose Window
bind-key w choose-tree -Z -w

# Kill Selected Pane
#bind-key Q kill-pane
bind-key -n M-C kill-pane

# start window numbering at 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# start numbering at 1
set -g base-index 1

# setup i and u for window splitting
unbind %
bind -n M-i split-window -h
bind -n M-u split-window -v

# Switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

# New Window with number
bind-key 1 new-window -t 1
bind-key 2 new-window -t 2
bind-key 3 new-window -t 3
bind-key 4 new-window -t 4
bind-key 5 new-window -t 5
bind-key 6 new-window -t 6
bind-key 7 new-window -t 7
bind-key 8 new-window -t 8
bind-key 9 new-window -t 9
bind-key 0 new-window -t 10

# Change current pane to window X. If window exists, use join-pane, otherwise use break-pane.
bind-key '!' if-shell 'tmux list-windows | grep "^1:"' 'join-pane -t :1' 'break-pane -t :1'
bind-key '"' if-shell 'tmux list-windows | grep "^2:"' 'join-pane -t :2' 'break-pane -t :2'
bind-key '#' if-shell 'tmux list-windows | grep "^3:"' 'join-pane -t :3' 'break-pane -t :3'
bind-key '¤' if-shell 'tmux list-windows | grep "^4:"' 'join-pane -t :4' 'break-pane -t :4'
bind-key '%' if-shell 'tmux list-windows | grep "^5:"' 'join-pane -t :5' 'break-pane -t :5'
bind-key '&' if-shell 'tmux list-windows | grep "^6:"' 'join-pane -t :6' 'break-pane -t :6'
bind-key '/' if-shell 'tmux list-windows | grep "^7:"' 'join-pane -t :7' 'break-pane -t :7'
bind-key '(' if-shell 'tmux list-windows | grep "^8:"' 'join-pane -t :8' 'break-pane -t :8'
bind-key ')' if-shell 'tmux list-windows | grep "^9:"' 'join-pane -t :9' 'break-pane -t :9'
bind-key '=' if-shell 'tmux list-windows | grep "^10:"' 'join-pane -t :10' 'break-pane -t :10'

# Select pane with Alt (no prefix)
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Resize pane (prefix with repeat)
bind-key -r h resize-pane -L 5 \; display-message "Resize left"
bind-key -r j resize-pane -D 5 \; display-message "Resize down"
bind-key -r k resize-pane -U 5 \; display-message "Resize up"
bind-key -r l resize-pane -R 5 \; display-message "Resize right"

# Zoom/fullscreen pane
bind-key -n M-F resize-pane -Z

# Swap pane
bind-key -r K swap-pane -U
bind-key -r J swap-pane -D

# Rotate Window
bind-key -n M-o rotate-window

# Select previously selected window
bind-key -n M-q last-window


###############################################################################
# <theme>                                                                     #
# based on basic.tmuxtheme from https://github.com/jimeh/tmux-themepack       #
###############################################################################

# Ease active pane detection with pane status
set -g pane-border-status top

# Status update interval
set -g status-interval 1

# Basic status bar colors
set -g status-style "bg=black, fg=cyan"

# Left side of status bar
set -g status-left "bg=black, fg=green"
set -g status-left-length 40
set -g status-left "#S #[fg=white]» #[fg=yellow]#I #[fg=cyan]#P  "

# Right side of status bar
set -g status-right "bg=black, fg=cyan"
set -g status-right-length 40
set -g status-right "#H #[fg=white]« #[fg=yellow]%H:%M:%S #[fg=green]%a %d-%b-%y"

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "

# Current window status
set -g window-status-current-style "bg=white, fg=black"

# Window with activity status
set -g window-status-activity-style "bg=yellow, fg=black"
    # fg and bg are flipped here due to a  bug in tmux

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify left

# Pane border
set -g pane-border-style "bg=default, fg=colour239"

# Active pane border
set -g pane-active-border-style "bg=default, fg=green"

# Pane number indicator
set -g display-panes-colour default
set -g display-panes-active-colour default

# Clock mode
set -g clock-mode-colour red
set -g clock-mode-style 24

# Message
set -g message-style "bg=default, fg=default"

# Command message
set -g message-command-style "bg=default, fg=default"

# Mode
set -g mode-style "bg=red, fg=default"

###############################################################################
# </theme>                                                                    #
###############################################################################
